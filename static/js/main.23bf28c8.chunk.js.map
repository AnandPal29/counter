{"version":3,"sources":["logo.svg","Components/counter.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","useState","num","setNum","maxVal","setMaxVal","useEffect","iValue","prompt","maxValue","className","onClick","value","onChange","e","target","alert","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4KAAe,I,kBCoCAA,EAhCC,WACZ,MAAqBC,mBAAS,GAA9B,mBAAMC,EAAN,KAAWC,EAAX,KACA,EAA2BF,mBAAS,KAApC,mBAAMG,EAAN,KAAcC,EAAd,KAqBA,OAPAC,qBAAU,WACR,IAAMC,EAASC,OAAO,oBAAqB,GAC3CL,EAAc,EAAPI,GACP,IAAME,EAAWD,OAAO,gBAAiB,KACzCH,EAAmB,EAATI,KACT,IAGD,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,iBAAiBC,QAbjB,WAChBR,EAAW,EAAJD,EAAM,IAYX,iBACA,uBAAOQ,UAAU,WAAWE,MAAOV,EAAKW,SAAU,SAACC,GAAD,OAAOX,EAAOW,EAAEC,OAAOH,UACzE,oBAAIF,UAAU,kBAAkBC,QAxBlB,WACT,EAAJT,GAASE,EACVY,MAAM,eAGNb,EAAW,EAAJD,EAAM,IAmBb,qBCrBOe,EANH,WACR,OACE,cAAC,EAAD,KCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.23bf28c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, {useEffect, useState} from 'react';\r\nimport '../App.css';\r\n\r\n\r\nconst Counter = () => {\r\n    const[num, setNum] = useState(1);\r\n    const[maxVal, setMaxVal] = useState(1000);\r\n    const increment = () => {\r\n      if(num*1 == maxVal){\r\n        alert('Max Reached');\r\n      }\r\n      else{\r\n        setNum(num*1+1);\r\n      }\r\n      \r\n    }\r\n    const decrement = () => {\r\n      setNum(num*1-1);\r\n    }\r\n\r\n    useEffect(() => {\r\n      const iValue = prompt(\"Set Initial Value\", 1);\r\n      setNum(iValue*1);\r\n      const maxValue = prompt(\"Set Max Value\", 1000);\r\n      setMaxVal(maxValue*1);\r\n    }, []);\r\n\r\n    return(\r\n      <div className=\"container\">\r\n        <h1 className=\"button btnLeft\" onClick={decrement}> - </h1>\r\n        <input className=\"inputBox\" value={num} onChange={(e) => setNum(e.target.value)}></input>\r\n        <h1 className=\"button btnRight\" onClick={increment}> + </h1>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Counter;","import logo from './logo.svg';\nimport React, {useState} from 'react';\nimport './App.css';\nimport Counter from './Components/counter';\nconst App = () => {\n    return(\n      <Counter />\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}